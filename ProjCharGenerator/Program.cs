using System;
using System.Collections.Generic;
using System.IO;

namespace generator
{
    public class CharGen
    {
        private string syms = "абвгдеёжзийклмнопрстуфхцчшщьыъэюя"; 
        private char[] data;
        private int size;
        private Random random = new Random();
        public CharGen() 
        {
           size = syms.Length;
           data = syms.ToCharArray(); 
        }
        public char getElement() 
        {
           return data[random.Next(0, size)]; 
        }
    }
    public class BiCharGen
    {
        private string syms = "абвгдежзийклмнопрстуфхцчшщьыэюя"; 
        private string[] data = new string[31*31];
        private int size;
        private Random random;
        private int sumOfWeights;
        private int[] sumOfWeightsBefore;
        private int[] weights = new int[31 * 31]  {
            2, 12, 35, 8, 14, 7, 6, 15, 7, 7, 19, 27, 19, 45, 5, 11, 26, 31, 27, 3, 1, 10, 6, 7, 10, 1, 0, 0, 2, 6, 9,
            5, 0, 0, 0, 0, 9, 1, 0, 6, 0, 0, 6, 0, 2, 21, 0, 8, 1, 0, 6, 0, 0, 0, 0, 0, 1, 11, 0, 0, 0, 2,
            35, 1, 5, 3, 3, 32, 0, 2, 17, 0, 7, 10, 3, 9, 58, 6, 6, 19, 6, 7, 0, 1, 1, 2, 4, 1, 18, 1, 2, 0, 3,
            7, 0, 0, 0, 3, 3, 0, 0, 5, 0, 1, 5, 0, 1, 50, 0, 7, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            25, 0, 3, 1, 1, 29, 1, 1, 13, 0, 1, 5, 1, 13, 22, 3, 6, 8, 1, 10, 0, 0, 1, 1, 1, 0, 5, 1, 0, 0, 1,
            2, 9, 18, 11, 27, 7, 5, 10, 6, 15, 13, 35, 24, 63, 7, 16, 39, 37, 33, 3, 1, 8, 3, 7, 3, 3, 0, 0, 1, 1, 2,
            5, 1, 0, 0, 6, 12, 0, 0, 5, 0, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            35, 1, 7, 1, 5, 3, 0, 0, 4, 0, 2, 1, 2, 9, 9, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4,
            4, 6, 22, 5, 10, 21, 2, 23, 19, 11, 19, 21, 20, 32, 8, 13, 11, 29, 29, 3, 1, 17, 3, 11, 1, 1, 0, 0, 1, 3, 17,
            1, 1, 4, 1, 3, 0, 1, 2, 4, 0, 5, 1, 2, 7, 9, 7, 3, 10, 2, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
            24, 1, 4, 1, 0, 4, 1, 1, 26, 0, 1, 4, 1, 2, 66, 2, 10, 3, 7, 10, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            25, 1, 1, 1, 1, 33, 2, 1, 36, 0, 1, 2, 1, 8, 30, 2, 0, 3, 1, 6, 0, 4, 0, 1, 0, 0, 3, 20,  0, 4, 9,
            18, 2, 4, 1, 1, 21, 1, 2, 23, 0, 3, 1, 3, 7, 19, 5, 2, 5, 3, 9, 1, 0, 0, 2, 0, 0, 5, 1, 1, 0, 3,
            54, 1, 2, 3, 3, 34, 0, 0, 58, 0, 3, 0, 1, 24, 67, 2, 1, 9, 9, 7, 1, 0, 5, 2, 0, 0, 36, 3, 0, 0, 5,
            1, 28, 84, 32, 47, 15, 7, 18, 12, 29, 19, 41, 38, 30, 9, 18, 43, 50, 39, 3, 2, 5, 2, 12, 4, 3, 0, 0, 2, 3, 2,
            7, 0, 0, 0, 0, 15, 0, 0, 4, 0, 0, 9, 0, 1, 46, 0, 41, 1, 0, 6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2,
            55, 1, 4, 4, 3, 37, 3, 1, 24, 0, 3, 1, 3, 7, 56, 2, 1, 5, 9, 16, 0, 1, 1, 1, 2, 0, 8, 3, 0, 0, 5,
            8, 1, 7, 1, 2, 25, 0, 0, 6, 0, 40, 13, 3, 9, 27, 11, 4, 11, 82, 6, 0, 1, 1, 2, 2, 0, 1, 8, 0, 0, 17,
            35, 1, 27, 1, 3, 31, 0, 1, 28, 0, 5, 1, 1, 11, 56, 4, 26, 18, 2, 10, 0, 0, 0, 1, 0, 0, 11, 21, 0, 0, 4,
            1, 4, 4, 4, 11, 2, 6, 3, 2, 0, 8, 5, 5, 5, 1, 5, 7, 14, 7, 0, 0, 1, 0, 8, 3, 2, 0, 0, 0, 9, 1,
            2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            4, 1, 4, 1, 3, 1, 0, 2, 3, 0, 4, 3, 3, 4, 18, 5, 3, 4, 2, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
            3, 0, 0, 0, 0, 7, 0, 0, 10, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
            12, 0, 0, 0, 0, 23, 0, 0, 13, 0, 2, 0, 0, 6, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
            5, 0, 0, 0, 0, 11, 0, 0, 14, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
            3, 0, 0, 0, 0, 8, 0, 0, 6, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 1, 9, 1, 3, 12, 0, 2, 4, 7, 3, 6, 6, 3, 2, 10, 3, 9, 4, 1, 0, 16, 0, 1, 2, 0, 0, 0, 0, 0, 0,
            0, 2, 4, 1, 1, 2, 0, 2, 2, 0, 6, 0, 3, 13, 2, 4, 1, 11, 3, 0, 0, 0, 0, 1, 4, 0, 0, 0, 1, 3, 1,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 2, 1, 2, 1, 0, 0, 3, 1, 0, 1, 0, 1, 1, 1, 3, 1, 1, 7, 0, 0, 0, 1, 1, 0, 4, 0, 0, 0, 0, 0,
            1, 3, 9, 1, 3, 3, 1, 5, 3, 2, 3, 3, 4, 6, 3, 6, 3, 6, 10, 0, 0, 2, 1, 4, 1, 1, 0, 0, 1, 1, 1
        };
        public BiCharGen(int? seed = null) 
        {
            size = 31*31;
            char[] chars = syms.ToCharArray();
            for (int i = 0; i < 31; i++)
               for (int j = 0; j < 31; j++)
                   data[i * 31 + j] = $"{syms[i]}{syms[j]}";
            if (seed != null) 
            {
                random = new Random((int)seed);
            } else {
                random = new Random();
            }
            sumOfWeightsBefore= new int[size];
            int sum = 0;
            for (int i = 0; i < size; i++)
            {
                sum += weights[i];
                sumOfWeightsBefore[i] = sum;
            }
            sumOfWeights = sumOfWeightsBefore[size-1];
        }
        public string getElement() 
        {
            int val = random.Next(0, sumOfWeights);
            int i = 0;
            while (val >= sumOfWeightsBefore[i++]){};
            return data[--i]; 
        }
    }
    public class BiWordGen
    {
        private string[] data = new string[100]
        {
            "и не", "и в", "потому что", "я не", "у меня", "может быть", "то что", "что он", "не было",
            "в том", "у нас", "в этом", "у него", "что в", "не только", "том что", "что я", "и на",
            "ничего не", "так и", "и с", "он не", "и я", "о том", "и все", "но и", "с ним", "а в", "так как",
            "что это", "как бы", "все это", "как и", "да и", "вместе с", "не в", "то есть", "и что", "и он",
            "никогда не", "к нему", "не может", "если бы", "а я", "так что", "он был", "а не", "об этом",
            "и даже", "что не", "это не", "еще не", "но не", "и как", "не мог", "из них", "не знаю", "на него",
            "в нем", "а потом", "что же", "в то", "при этом", "уже не", "в его", "это было", "во время", "что она",
            "того что", "как будто", "то же", "но в", "как в", "ко мне", "так же", "а также", "и по", "что у",
            "у них", "и т", "и так", "и вот", "один из", "никто не", "в москве", "и его", "у вас", "к тому",
            "не могу", "в конце", "что вы", "но я", "что они", "я и", "только в", "его в", "таким образом", 
            "что и", "в россии", "несмотря на"
        };
        private int size;
        private Random random;
        private int sumOfWeights;
        private int[] sumOfWeightsBefore;
        private int[] weights = new int[100]
        {
            2013, 1939, 1174, 1137, 971, 960, 952, 927, 927, 898, 864, 848, 829, 803, 802, 778, 756, 743, 718,
            716, 710, 687, 686, 672, 669, 662, 659, 600, 583, 579, 568, 529, 506, 502, 495, 492, 492, 491, 488,
            483, 482, 480, 476, 475, 475, 472, 466, 451, 449, 449, 448, 447, 444, 425, 423, 413, 403, 403, 403,
            402, 401, 399, 399, 390, 385, 380, 379, 374, 372, 371, 371, 369, 368, 364, 364, 361, 352, 351, 345,
            339, 337, 335, 333, 333, 331, 330, 330, 328, 327, 325, 324, 319, 313, 310, 308, 307, 302, 302, 299, 297
        };
        public BiWordGen(int? seed = null) 
        {
            size = 100;
            if (seed != null) 
            {
                random = new Random((int)seed);
            } else {
                random = new Random();
            }
            sumOfWeightsBefore= new int[size];
            int sum = 0;
            for (int i = 0; i < size; i++)
            {
                sum += weights[i];
                sumOfWeightsBefore[i] = sum;
            }
            sumOfWeights = sumOfWeightsBefore[size-1];
        }
        public string getElement() 
        {
            int val = random.Next(0, sumOfWeights);
            int i = 0;
            while (val >= sumOfWeightsBefore[i++]){};
            return data[--i]; 
        }
    }
    public class WordGen
    {
        private string[] data = new string[100]
        {
            "и", "в", "не", "на", "с", "что", "я", "а", "он", "как", "к", "по", "но", "его",
            "это", "из", "все", "у", "за", "от", "то", "о", "же", "так", "для", "было", "она",
            "только", "мы", "бы", "мне", "был", "ее", "или", "еще", "меня", "их", "они", "до",
            "когда", "уже", "ты", "если", "да", "вы", "вот", "при", "ни", "ему", "чтобы", "нет",
            "есть", "даже", "может", "быть", "во", "время", "очень", "были", "была", "сказал",
            "ли", "под", "со", "себя", "нас", "где", "него", "чем", "того", "без", "будет",
            "этого", "теперь", "после", "там", "можно", "этом", "раз", "себе", "тем", "этот",
            "ну", "том", "потом", "более", "них", "которые", "всех", "человек", "ничего", "надо",
            "тут", "тогда", "здесь", "потому", "один", "кто", "через", "который"
        };
        private int size;
        private Random random;
        private int sumOfWeights;
        private int[] sumOfWeightsBefore;
        private int[] weights = new int[100]
        {
            7416, 5842, 3385, 2936, 2228, 2210, 1592, 1541, 1377, 1300, 1132, 1071, 1048, 983,
            957, 836, 817, 798, 754, 747, 695, 685, 665, 663, 600, 592, 553, 516, 501, 485, 449,
            442, 438, 434, 432, 422, 415, 412, 400, 390, 385, 348, 347, 338, 338, 310, 305, 305, 
            302, 286, 269, 267, 264, 263, 262, 259, 255, 252, 249, 246, 233, 231, 228, 222, 220,
            218, 216, 216, 213, 209, 205, 204, 202, 201, 195, 192, 189, 189, 184, 180, 177, 176,
            175, 174, 173, 170, 168, 167, 167, 166, 163, 162, 160, 159, 158, 157, 157, 156, 153, 151
        };
        public WordGen(int? seed = null) 
        {
            size = 100;
            if (seed != null) 
            {
                random = new Random((int)seed);
            } else {
                random = new Random();
            }
            sumOfWeightsBefore= new int[size];
            int sum = 0;
            for (int i = 0; i < size; i++)
            {
                sum += weights[i];
                sumOfWeightsBefore[i] = sum;
            }
            sumOfWeights = sumOfWeightsBefore[size-1];
        }
        public string getElement() 
        {
            int val = random.Next(0, sumOfWeights);
            int i = 0;
            while (val >= sumOfWeightsBefore[i++]){};
            return data[--i]; 
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            BiCharGen bcgen = new BiCharGen();
            StreamWriter writer;
            writer = new StreamWriter("BiChars.txt");
            string str = "";
            for(int i = 0; i < 1000; i++) 
            {
               str += bcgen.getElement() + ' '; 
            }
            writer.Write(str);
            Console.Write(str);
            WordGen wgen = new WordGen();
            writer = new StreamWriter("Words.txt");
            str = "";
            for(int i = 0; i < 1000; i++) 
            {
               str += wgen.getElement() + ' '; 
            }
            writer.Write(str);
            BiWordGen bwgen = new BiWordGen();
            writer = new StreamWriter("BiWords.txt");
            str = "";
            for(int i = 0; i < 1000; i++) 
            {
               str += bwgen.getElement() + ' '; 
            }
            writer.Write(str);
        }
    }
}

